<?php

namespace ContainerJkmjU67;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/Extension/DependencyInjection/DependencyInjectionExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/ResolvedFormTypeFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/Extension/DataCollector/Proxy/ResolvedTypeFactoryDataCollectorProxy.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/ResolvedFormTypeFactory.php';

        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Form\\AcquereurType' => ['privates', 'App\\Form\\AcquereurType', 'getAcquereurTypeService', true],
            'App\\Form\\AdActeursOperationType' => ['privates', 'App\\Form\\AdActeursOperationType', 'getAdActeursOperationTypeService', true],
            'App\\Form\\AdImagesType' => ['privates', 'App\\Form\\AdImagesType', 'getAdImagesTypeService', true],
            'App\\Form\\AdProjectType' => ['privates', 'App\\Form\\AdProjectType', 'getAdProjectTypeService', true],
            'App\\Form\\AdSearchType' => ['privates', 'App\\Form\\AdSearchType', 'getAdSearchTypeService', true],
            'App\\Form\\AdsType' => ['privates', 'App\\Form\\AdsType', 'getAdsTypeService', true],
            'App\\Form\\BodyTextType' => ['privates', 'App\\Form\\BodyTextType', 'getBodyTextTypeService', true],
            'App\\Form\\CandidatureLightType' => ['privates', 'App\\Form\\CandidatureLightType', 'getCandidatureLightTypeService', true],
            'App\\Form\\CandidatureType' => ['privates', 'App\\Form\\CandidatureType', 'getCandidatureTypeService', true],
            'App\\Form\\ContactInfosType' => ['privates', 'App\\Form\\ContactInfosType', 'getContactInfosTypeService', true],
            'App\\Form\\CreditsType' => ['privates', 'App\\Form\\CreditsType', 'getCreditsTypeService', true],
            'App\\Form\\ImageType' => ['privates', 'App\\Form\\ImageType', 'getImageTypeService', true],
            'App\\Form\\LogementActuelleType' => ['privates', 'App\\Form\\LogementActuelleType', 'getLogementActuelleTypeService', true],
            'App\\Form\\LogementDesireType' => ['privates', 'App\\Form\\LogementDesireType', 'getLogementDesireTypeService', true],
            'App\\Form\\MediaAdsType' => ['privates', 'App\\Form\\MediaAdsType', 'getMediaAdsTypeService', true],
            'App\\Form\\MessagesType' => ['privates', 'App\\Form\\MessagesType', 'getMessagesTypeService', true],
            'App\\Form\\MotivationParticipationType' => ['privates', 'App\\Form\\MotivationParticipationType', 'getMotivationParticipationTypeService', true],
            'App\\Form\\PostCategoriesType' => ['privates', 'App\\Form\\PostCategoriesType', 'getPostCategoriesTypeService', true],
            'App\\Form\\PostType' => ['privates', 'App\\Form\\PostType', 'getPostTypeService', true],
            'App\\Form\\PresentationProjetType' => ['privates', 'App\\Form\\PresentationProjetType', 'getPresentationProjetTypeService', true],
            'App\\Form\\ProfileType' => ['privates', 'App\\Form\\ProfileType', 'getProfileTypeService', true],
            'App\\Form\\RegistrationType' => ['privates', 'App\\Form\\RegistrationType', 'getRegistrationTypeService', true],
            'App\\Form\\ResetPasswordType' => ['privates', 'App\\Form\\ResetPasswordType', 'getResetPasswordTypeService', true],
            'App\\Form\\ResponseMessageCandidatureType' => ['privates', 'App\\Form\\ResponseMessageCandidatureType', 'getResponseMessageCandidatureTypeService', true],
            'App\\Form\\RoleType' => ['privates', 'App\\Form\\RoleType', 'getRoleTypeService', true],
            'App\\Form\\SituationProfessionnelFinanciereType' => ['privates', 'App\\Form\\SituationProfessionnelFinanciereType', 'getSituationProfessionnelFinanciereTypeService', true],
            'App\\Form\\UserContactInfosType' => ['privates', 'App\\Form\\UserContactInfosType', 'getUserContactInfosTypeService', true],
            'App\\Form\\UserType' => ['privates', 'App\\Form\\UserType', 'getUserTypeService', true],
            'FM\\ElfinderBundle\\Form\\Type\\ElFinderType' => ['privates', 'fm_elfinder.form.type', 'getFmElfinder_Form_TypeService', true],
            'FOS\\CKEditorBundle\\Form\\Type\\CKEditorType' => ['privates', 'fos_ck_editor.form.type', 'getFosCkEditor_Form_TypeService', true],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['services', 'form.type.file', 'getForm_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
            'Vich\\UploaderBundle\\Form\\Type\\VichFileType' => ['services', 'vich_uploader.form.type.file', 'getVichUploader_Form_Type_FileService', true],
            'Vich\\UploaderBundle\\Form\\Type\\VichImageType' => ['services', 'vich_uploader.form.type.image', 'getVichUploader_Form_Type_ImageService', true],
        ], [
            'App\\Form\\AcquereurType' => '?',
            'App\\Form\\AdActeursOperationType' => '?',
            'App\\Form\\AdImagesType' => '?',
            'App\\Form\\AdProjectType' => '?',
            'App\\Form\\AdSearchType' => '?',
            'App\\Form\\AdsType' => '?',
            'App\\Form\\BodyTextType' => '?',
            'App\\Form\\CandidatureLightType' => '?',
            'App\\Form\\CandidatureType' => '?',
            'App\\Form\\ContactInfosType' => '?',
            'App\\Form\\CreditsType' => '?',
            'App\\Form\\ImageType' => '?',
            'App\\Form\\LogementActuelleType' => '?',
            'App\\Form\\LogementDesireType' => '?',
            'App\\Form\\MediaAdsType' => '?',
            'App\\Form\\MessagesType' => '?',
            'App\\Form\\MotivationParticipationType' => '?',
            'App\\Form\\PostCategoriesType' => '?',
            'App\\Form\\PostType' => '?',
            'App\\Form\\PresentationProjetType' => '?',
            'App\\Form\\ProfileType' => '?',
            'App\\Form\\RegistrationType' => '?',
            'App\\Form\\ResetPasswordType' => '?',
            'App\\Form\\ResponseMessageCandidatureType' => '?',
            'App\\Form\\RoleType' => '?',
            'App\\Form\\SituationProfessionnelFinanciereType' => '?',
            'App\\Form\\UserContactInfosType' => '?',
            'App\\Form\\UserType' => '?',
            'FM\\ElfinderBundle\\Form\\Type\\ElFinderType' => '?',
            'FOS\\CKEditorBundle\\Form\\Type\\CKEditorType' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
            'Vich\\UploaderBundle\\Form\\Type\\VichFileType' => '?',
            'Vich\\UploaderBundle\\Form\\Type\\VichImageType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ?? $container->load('getForm_TypeExtension_Form_TransformationFailureHandlingService'));
            yield 1 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 2 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 3 => ($container->privates['form.type_extension.upload.validator'] ?? $container->load('getForm_TypeExtension_Upload_ValidatorService'));
            yield 4 => ($container->privates['form.type_extension.csrf'] ?? $container->load('getForm_TypeExtension_CsrfService'));
            yield 5 => ($container->privates['form.type_extension.form.data_collector'] ?? $container->load('getForm_TypeExtension_Form_DataCollectorService'));
        }, 6), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ?? ($container->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ?? ($container->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
            yield 1 => ($container->privates['form.type_guesser.doctrine'] ?? $container->load('getForm_TypeGuesser_DoctrineService'));
        }, 2))], new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ($container->privates['data_collector.form'] ?? $container->getDataCollector_FormService())));
    }
}
